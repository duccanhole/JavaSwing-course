/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.view;

import BUS.personBUS;
import DTO.personDTO;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.sql.Timestamp;
import java.util.ArrayList;

/**
 *
 * @author PC
 */
public class PersonManager extends javax.swing.JPanel {
    personBUS pb;
    DefaultTableModel model;
    SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd");
    int ID;
    
    public PersonManager() {
        initComponents();
        model=(DefaultTableModel) persontable.getModel();
        showPersonInfo();
    }
    public void showPersonInfo(){
        try {
          pb=new personBUS();
            pb.getList_person();
        } catch (Exception e) {
//            Logger.getLogger(Index.class.getName()).log(Level.SEVERE,null,e);
        }
        model.setRowCount(0);
        for(personDTO p : pb.getList_person() ){
            model.addRow(new Object[]{
                p.getPersonID(),p.getLastname(),p.getFirstname(),p.getHireDate(),p.getEnrollmentDate()
            });
        }
    }
     
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LastnameField = new javax.swing.JTextField();
        Lastnamelabel = new javax.swing.JLabel();
        Firstnamelabel = new javax.swing.JLabel();
        FirstnameField = new javax.swing.JTextField();
        Titlelabel = new javax.swing.JLabel();
        Searchfield = new javax.swing.JTextField();
        Searchbutton = new javax.swing.JButton();
        Hiredatelabel = new javax.swing.JLabel();
        Enrollmentdatelabel = new javax.swing.JLabel();
        Addbutton = new javax.swing.JButton();
        Deletebutton = new javax.swing.JButton();
        Editbutton = new javax.swing.JButton();
        Ressetbutton = new javax.swing.JButton();
        Personview = new javax.swing.JScrollPane();
        persontable = new javax.swing.JTable();
        enrollmentdatechoose = new com.toedter.calendar.JDateChooser();
        hiredatechoose = new com.toedter.calendar.JDateChooser();

        LastnameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LastnameFieldActionPerformed(evt);
            }
        });

        Lastnamelabel.setText("Lastname:");

        Firstnamelabel.setText("Firstname:");

        Titlelabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Titlelabel.setText("PERSON INFORMATION");
        Titlelabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Searchbutton.setText("Search");
        Searchbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchbuttonActionPerformed(evt);
            }
        });

        Hiredatelabel.setText("HireDate:");

        Enrollmentdatelabel.setText("EnrollmentDate:");

        Addbutton.setText("Add");
        Addbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddbuttonMouseClicked(evt);
            }
        });
        Addbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddbuttonActionPerformed(evt);
            }
        });

        Deletebutton.setText("Delete");
        Deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletebuttonActionPerformed(evt);
            }
        });

        Editbutton.setText("Edit");
        Editbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditbuttonActionPerformed(evt);
            }
        });

        Ressetbutton.setText("Reset");
        Ressetbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RessetbuttonMouseClicked(evt);
            }
        });

        persontable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "PersonID", "Lastname", "Firstname", "Hiredate", "enrollmentdate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        persontable.setDropMode(javax.swing.DropMode.ON_OR_INSERT_ROWS);
        persontable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                persontableMouseClicked(evt);
            }
        });
        Personview.setViewportView(persontable);
        persontable.getAccessibleContext().setAccessibleDescription("");

        enrollmentdatechoose.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                enrollmentdatechooseAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(Lastnamelabel)
                                        .addComponent(Firstnamelabel))
                                    .addComponent(Enrollmentdatelabel)
                                    .addComponent(Hiredatelabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LastnameField, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                    .addComponent(FirstnameField)
                                    .addComponent(enrollmentdatechoose, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                    .addComponent(hiredatechoose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(113, 113, 113)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(Searchbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Deletebutton)
                                            .addComponent(Addbutton))
                                        .addGap(57, 57, 57)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Editbutton)
                                            .addComponent(Ressetbutton, javax.swing.GroupLayout.Alignment.TRAILING)))))
                            .addComponent(Personview, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(Titlelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Titlelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lastnamelabel)
                            .addComponent(LastnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Searchbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Firstnamelabel)
                                    .addComponent(FirstnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Addbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Editbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(11, 11, 11)
                        .addComponent(Hiredatelabel))
                    .addComponent(hiredatechoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Deletebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Ressetbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(Enrollmentdatelabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enrollmentdatechoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(Personview, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void LastnameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LastnameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LastnameFieldActionPerformed

    private void SearchbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchbuttonActionPerformed
//         TODO add your handling code here:
        System.out.println("kq: "+pb.timKiem_LastName(Searchfield.getText().toString()));
        ArrayList<personDTO> personsearch=pb.timKiem_LastName(Searchfield.getText().toString());
         model.setRowCount(0);
        for(personDTO p :personsearch ){
            model.addRow(new Object[]{
                p.getPersonID(),p.getLastname(),p.getFirstname(),p.getHireDate(),p.getEnrollmentDate()
            });
        }
        
    }//GEN-LAST:event_SearchbuttonActionPerformed

    private void AddbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddbuttonActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==Addbutton){
             int a=JOptionPane.showConfirmDialog(null,"Bạn có chắc muốn lưu chứ!!");  
                 if(a==JOptionPane.YES_OPTION){  
                int id = -1;
                for(personDTO p : pb.getList_person()) {
                    if(p.getPersonID() > id) id = p.getPersonID();
                }
                personDTO person = new personDTO();
                person.setPersonID(id+1);
                person.setFirstname(FirstnameField.getText());
                person.setLastname(LastnameField.getText());
                if(hiredatechoose.getDate() != null) { Date hireDate = hiredatechoose.getDate();
                    person.setHireDate(new Timestamp(hireDate.getTime()));
                }
                if(enrollmentdatechoose.getDate()!= null) {
                    Date enrollmentDate = enrollmentdatechoose.getDate();
                    person.setEnrollmentDate(new Timestamp(enrollmentDate.getTime()));
                }
               
                if(FirstnameField.getText()==""||LastnameField.getText()==""||(hiredatechoose.getDate()==null&&enrollmentdatechoose.getDate()==null)||(hiredatechoose.getDate()!=null&&enrollmentdatechoose.getDate()!=null))
                {
                JOptionPane.showMessageDialog(null, "Lưu không thành công, vui lòng nhập hết các thông tin!","Alert",JOptionPane.ERROR_MESSAGE);
        
                }else{
                    try {
                        pb.Addperson(person);
                    } catch (Exception ex) {
                        Logger.getLogger(PersonManager.class.getName()).log(Level.SEVERE, null, ex);
                    }
                JOptionPane.showMessageDialog(null, "Lưu thành công!", "Success", JOptionPane.INFORMATION_MESSAGE);        
                showPersonInfo();
            }
        }
        }
    }//GEN-LAST:event_AddbuttonActionPerformed

    private void EditbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditbuttonActionPerformed
        // TODO add your handling code here:
         if(evt.getSource()==Editbutton){
             int a=JOptionPane.showConfirmDialog(null,"Bạn có chắc muốn sửa chứ!!");  
                 if(a==JOptionPane.YES_OPTION){  
                     
                personDTO person = new personDTO();
                person.setPersonID(ID);
                person.setFirstname(FirstnameField.getText());
                person.setLastname(LastnameField.getText());
                if(hiredatechoose.getDate() != null) { Date hireDate = hiredatechoose.getDate();
                    person.setHireDate(new Timestamp(hireDate.getTime()));
                }
                if(enrollmentdatechoose.getDate()!= null) {
                    Date enrollmentDate = enrollmentdatechoose.getDate();
                    person.setEnrollmentDate(new Timestamp(enrollmentDate.getTime()));
                }
               
                if(FirstnameField.getText()==""||LastnameField.getText()==""||(hiredatechoose.getDate()==null&&enrollmentdatechoose.getDate()==null)||(hiredatechoose.getDate()!=null&&enrollmentdatechoose.getDate()!=null))
                {
                JOptionPane.showMessageDialog(null, "Thông tin không hợp lệ","Alert",JOptionPane.ERROR_MESSAGE);
        
                }else{
                    try {
                        pb.sua(person);
                    } catch (Exception ex) {
                        Logger.getLogger(PersonManager.class.getName()).log(Level.SEVERE, null, ex);
                    }
                JOptionPane.showMessageDialog(null, "sửa thông tin thành công!", "Success", JOptionPane.INFORMATION_MESSAGE);        
                showPersonInfo();
            }
        }
        }
    }//GEN-LAST:event_EditbuttonActionPerformed

    private void AddbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddbuttonMouseClicked

    }//GEN-LAST:event_AddbuttonMouseClicked

    private void enrollmentdatechooseAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_enrollmentdatechooseAncestorAdded

    }//GEN-LAST:event_enrollmentdatechooseAncestorAdded

    private void persontableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_persontableMouseClicked
        // TODO add your handling code here:
        int row=persontable.getSelectedRow();
        ID=Integer.parseInt(persontable.getModel().getValueAt(row, 0).toString());
        String firstname=persontable.getModel().getValueAt(row, 2).toString();
        FirstnameField.setText(firstname);
        String lastname=persontable.getModel().getValueAt(row, 1).toString();
        LastnameField.setText(lastname);
        Date hiredate=(Date) persontable.getModel().getValueAt(row, 3);
        hiredatechoose.setDate(hiredate);
        Date enrollmentdate=(Date) persontable.getModel().getValueAt(row, 4);
        enrollmentdatechoose.setDate(enrollmentdate);       
    }//GEN-LAST:event_persontableMouseClicked

    private void RessetbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RessetbuttonMouseClicked
        // TODO add your handling code here:
        FirstnameField.setText("");
        LastnameField.setText("");
        hiredatechoose.setDate(null);
        enrollmentdatechoose.setDate(null);
        showPersonInfo();
    }//GEN-LAST:event_RessetbuttonMouseClicked

    private void DeletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletebuttonActionPerformed
        // TODO add your handling code here:
         if(evt.getSource()==Deletebutton){
             int a=JOptionPane.showConfirmDialog(null,"Bạn có chắc muốn xóa chứ!!");  
                 if(a==JOptionPane.YES_OPTION){  
                     
                personDTO person = new personDTO();
                person.setPersonID(ID);
                person.setFirstname(FirstnameField.getText());
                person.setLastname(LastnameField.getText());
                if(hiredatechoose.getDate() != null) { Date hireDate = hiredatechoose.getDate();
                    person.setHireDate(new Timestamp(hireDate.getTime()));
                }
                if(enrollmentdatechoose.getDate()!= null) {
                    Date enrollmentDate = enrollmentdatechoose.getDate();
                    person.setEnrollmentDate(new Timestamp(enrollmentDate.getTime()));
                }
               
                if(FirstnameField.getText()==""||LastnameField.getText()==""||(hiredatechoose.getDate()==null&&enrollmentdatechoose.getDate()==null)||(hiredatechoose.getDate()!=null&&enrollmentdatechoose.getDate()!=null))
                {
                JOptionPane.showMessageDialog(null, "Thông tin không hợp lệ","Alert",JOptionPane.ERROR_MESSAGE);
        
                }else{
                    try {
                        pb.xoa(person);
                    } catch (Exception ex) {
                        Logger.getLogger(PersonManager.class.getName()).log(Level.SEVERE, null, ex);
                    }
                JOptionPane.showMessageDialog(null, "Xóa thành công!", "Success", JOptionPane.INFORMATION_MESSAGE);        
                showPersonInfo();
            }
        }
        }
    }//GEN-LAST:event_DeletebuttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addbutton;
    private javax.swing.JButton Deletebutton;
    private javax.swing.JButton Editbutton;
    private javax.swing.JLabel Enrollmentdatelabel;
    private javax.swing.JTextField FirstnameField;
    private javax.swing.JLabel Firstnamelabel;
    private javax.swing.JLabel Hiredatelabel;
    private javax.swing.JTextField LastnameField;
    private javax.swing.JLabel Lastnamelabel;
    private javax.swing.JScrollPane Personview;
    private javax.swing.JButton Ressetbutton;
    private javax.swing.JButton Searchbutton;
    private javax.swing.JTextField Searchfield;
    private javax.swing.JLabel Titlelabel;
    private com.toedter.calendar.JDateChooser enrollmentdatechoose;
    private com.toedter.calendar.JDateChooser hiredatechoose;
    private javax.swing.JTable persontable;
    // End of variables declaration//GEN-END:variables
}
